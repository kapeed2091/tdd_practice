USE CASES:
    - User can create an account in wallet.
    - User can check his balance.
    - User can add money to his account in wallet.
    - User can see transactions statement.
    - User can transfer money from his wallet to another user wallet.

Architecture/Design: Should we fix the architecture? - task division/teams - to divide different apps?
    - API Layer, Functionality Layer.
    - Apps: Users (Third Party), Wallet.
    - Models:
        Account


TDD TODO:
    - Create Account
        - create account for a user
        - different account numbers for different users
        - one user should have only one account
        - account number should not be same for two users

    - Add Money
        - add balance to user
        - add negative balance to user
        - user should have account

    - Get Balance
        - get balance for user
        - user should have account

    - Transfer Money
        - transfer money from payee to beneficiary
        - can't transfer negative balance
        - payee should have customer account
        - beneficiary should have customer account
        - payee should have sufficient balance
        - both payee and beneficiary shouldn't be the same customer
